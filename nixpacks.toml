[phases.setup]
aptPkgs = ["git"]
# Disable Railway's autodetection to prevent it from trying to run its own package manager
nixPkgs = ["nodejs_20"]

# Set up Corepack for Yarn 4 and handle all installation
[phases.install]
dependsOn = ["setup"]
cmds = [
  "npm install -g corepack@0.24.1",
  "corepack enable",
  "yarn -v",
  "echo 'Installing dependencies...'",
  "YARN_ENABLE_IMMUTABLE_INSTALLS=false yarn install --mode update-lockfile",
  "echo 'Dependencies installed successfully.'"
]

# Build the packages in the right order
[phases.build]
dependsOn = ["install"]
cmds = [
  "echo 'Building shared package...'",
  "cd packages/shared && yarn build",
  "echo 'Shared package built successfully.'",
  "echo 'Building API package...'", 
  "cd ../../packages/server/api && yarn build",
  "echo 'API package built successfully.'",
  # Add explicit package linking to ensure the API can find the shared package
  "echo 'Setting up package references for production...'",
  # Make sure the API's package.json is pointing to the correct path
  "cd ../../packages/server/api && node -e \"const fs=require('fs'); const pkg=JSON.parse(fs.readFileSync('package.json')); pkg.dependencies['@wavenotes-new/shared'] = '../../shared'; fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));\"",
  # Create a symlink to make sure the API can find the shared package
  "mkdir -p packages/server/api/node_modules/@wavenotes-new",
  "ln -sf ../../../shared packages/server/api/node_modules/@wavenotes-new/shared",
  "echo 'Package references set up successfully.'"
]

# Launch the API service
[start]
cmd = "cd packages/server/api && NODE_ENV=production node dist/index.js"

# Explicitly disable Railway's automatic package detection
[detect]
# Disable auto-detection for both npm and yarn
NPM = false
YARN = false

[variables]
NODE_ENV = "production" 