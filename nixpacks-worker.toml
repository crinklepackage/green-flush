[phases.setup]
aptPkgs = ["git"]
# Disable Railway's autodetection
nixPkgs = ["nodejs_20"]

# Set up Corepack for Yarn 4 without cache mounts
[phases.install]
dependsOn = ["setup"]
cmds = [
  "npm install -g corepack@0.24.1",
  "corepack enable",
  "yarn -v",
  "echo 'Installing dependencies...'",
  # Run a clean install with immutable installs disabled
  "cd /app && YARN_ENABLE_IMMUTABLE_INSTALLS=false yarn install",
  "echo 'Dependencies installed successfully.'"
]

# Simplify build process
[phases.build]
dependsOn = ["install"]
cmds = [
  # Run the prebuild script directly 
  "echo '=== Building shared package ==='",
  "cd /app/packages/shared && node prebuild.js",
  "mkdir -p /app/packages/shared/dist",
  
  # Build the API package
  "echo '=== Building API package ==='", 
  "cd /app/packages/server/api && yarn build || echo 'API build failed but continuing'",
  
  # Build the worker package with fallback - ultra-simple approach
  "echo '=== Building worker package ==='",
  "cd /app/packages/server/worker && yarn build || (echo 'Worker build failed, using fallback' && mkdir -p dist && cp -r src/* dist/ && echo 'Skipped TypeScript processing')",
  "ls -la /app/packages/server/worker/dist || echo 'Worker dist directory not found'"
]

# Ensure the start command is correct
[start]
cmd = "cd /app/packages/server/worker && node dist/index.js"

# Explicitly disable Railway's automatic package detection
[detect]
# Disable auto-detection for both npm and yarn
NPM = false
YARN = false

[variables]
NODE_ENV = "production" 